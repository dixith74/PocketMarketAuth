swagger: '2.0'
info:
  description: REST API for Pocket market
  version: '1.0'
  title: POCKET MARKET APP
  termsOfService: Terms of service
  contact:
    name: Pocket market
    url: 'https://pm.com/about/'
    email: contact@pm.com
  license:
    name: Apache License Version 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0'
host: 'localhost:8084'
basePath: /
tags:
  - name: auth-controller
    description: Auth Controller
  - name: user-controller
    description: User Controller
paths:
  /user/login:
    post:
      tags:
        - auth-controller
      summary: loginHandler
      operationId: loginHandlerUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: userRequest
          description: userRequest
          required: true
          schema:
            $ref: '#/definitions/VerificationRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/JwtToken'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /user/register:
    post:
      tags:
        - auth-controller
      summary: registrationHandler
      operationId: registrationHandlerUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: userRequest
          description: userRequest
          required: true
          schema:
            $ref: '#/definitions/ActRequest'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/user/update/{userid}':
    put:
      tags:
        - user-controller
      summary: updateUser
      operationId: updateUserUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: userid
          in: path
          description: userid
          required: true
          type: integer
          format: int64
        - in: body
          name: user
          description: user
          required: true
          schema:
            $ref: '#/definitions/UserWrapper'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /user/upload:
    post:
      tags:
        - user-controller
      summary: handleFileUpload
      operationId: handleFileUploadUsingPOST
      consumes:
        - multipart/form-data
      produces:
        - '*/*'
      parameters:
        - name: file
          in: formData
          description: file
          required: true
          type: file
        - name: userId
          in: query
          description: userId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/user/{userid}':
    get:
      tags:
        - user-controller
      summary: getUser
      operationId: getUserUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: userid
          in: path
          description: userid
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
definitions:
  JwtToken:
    type: object
    properties:
      jti:
        type: string
      refresh_token:
        type: string
      token:
        type: string
      type:
        type: string
  ActRequest:
    type: object
    properties:
      mode:
        type: string
      profile_required:
        type: boolean
      user_name:
        type: string
      user_type:
        type: string
  VerificationRequest:
    type: object
    properties:
      code:
        type: string
      mode:
        type: string
      profile_required:
        type: boolean
      user_name:
        type: string
      user_type:
        type: string
  UserWrapper:
    type: object
    properties:
      address:
        type: string
      created_time:
        type: string
        format: date-time
      email:
        type: string
      first_name:
        type: string
      image:
        type: string
      last_name:
        type: string
      mobile_no:
        type: string
      rating:
        type: number
        format: double
      updated_time:
        type: string
        format: date-time
      user_id:
        type: integer
        format: int64
      user_name:
        type: string
      user_stts:
        type: string
